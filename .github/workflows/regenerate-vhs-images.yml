name: Regenerate VHS Documentation Images

on:
  schedule:
    # Run monthly on the first day at 00:00 UTC
    - cron: '0 0 1 * *'
  workflow_dispatch:  # Allow manual triggering

permissions:
  contents: write

jobs:
  regenerate-images:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Git configuration
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

      - name: Install system dependencies
        run: |
          sudo apt-get update -qq
          sudo apt-get install -y ffmpeg ttyd

      - name: Install Hug SCM
        run: make install

      - name: Install VHS
        run: |
          VHS_VERSION="0.8.0"
          echo "Installing VHS v${VHS_VERSION}..."
          
          wget -q https://github.com/charmbracelet/vhs/releases/download/v${VHS_VERSION}/vhs_${VHS_VERSION}_Linux_x86_64.tar.gz
          
          # Extract tarball
          tar -xzf vhs_${VHS_VERSION}_Linux_x86_64.tar.gz
          
          # Find and install the vhs binary
          if [ -f "vhs_${VHS_VERSION}_Linux_x86_64/vhs" ]; then
            sudo mv "vhs_${VHS_VERSION}_Linux_x86_64/vhs" /usr/local/bin/
          elif [ -f "vhs" ]; then
            sudo mv "vhs" /usr/local/bin/
          else
            echo "Error: VHS binary not found after extraction." >&2
            echo "Contents of current directory:"
            ls -la
            echo "Contents of extracted directory:"
            ls -la vhs_${VHS_VERSION}_Linux_x86_64/ || true
            exit 1
          fi
          
          # Verify installation
          chmod +x /usr/local/bin/vhs
          vhs --version
          
          echo "VHS installed successfully"

      - name: Regenerate VHS images
        run: |
          source bin/activate
          echo "Activating Hug environment..."
          which hug
          hug --version || echo "Hug command check skipped"
          
          echo "Running VHS regeneration..."
          make vhs-regenerate
          
          echo "Validating output..."
          # Check for frame directories that should have been cleaned up
          frame_dirs=$(find docs/commands/img -type d \( -name "*.png" -o -name "*.gif" \) 2>/dev/null || true)
          if [ -n "$frame_dirs" ]; then
            frame_count=$(echo "$frame_dirs" | wc -l)
            echo "Warning: Found $frame_count frame directories that weren't cleaned up:"
            echo "$frame_dirs"
          fi
          
          echo "Generated images:"
          ls -lh docs/commands/img/*.{png,gif} 2>/dev/null || echo "No images found"
        continue-on-error: false

      - name: Commit and push changes
        run: |
          echo "Checking for changes..."
          git status
          
          echo "Running commit and push script..."
          make vhs-commit-push
        env:
          GITHUB_REF_NAME: ${{ github.ref_name }}
        continue-on-error: false

