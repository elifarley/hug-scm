#!/usr/bin/env bash
CMD_BASE="$(readlink -f "$0" 2>/dev/null || greadlink -f "$0")" || CMD_BASE="$0"; CMD_BASE="$(dirname "$CMD_BASE")"
for f in hug-common hug-git-kit; do . "$CMD_BASE/../lib/$f"; done # Load common constants and functions
set -euo pipefail  # Exit on error, undefined vars, pipe failures
# Part of the Hug tool suite

usage() {
  cat <<'EOF'
Usage: hug w zap-all [OPTIONS]

Discard tracked changes and purge untracked/ignored files across the repository.

Options:
      --dry-run    Show what would be affected without applying changes
  -f, --force      Skip confirmation prompt
  -h, --help       Show this help

Semantics:
  â€¢ Performs a full factory reset on ALL files of the working directory so that it matches HEAD verbatim.
  â€¢ ALL uncommitted changes (staged or unstaged) will be wiped (as in `hug wipe-all`).
  â€¢ ALL untracked and ignored files will be gone for good (as in `hug purge-all -ui`).
  â€¢ It's the same as `hug wipe-all; hug purge-all -ui`.
EOF
}

confirm() {
  local prompt=$1 expected=$2 reply
  read -r -p "$prompt" reply
  if [[ "$reply" != "$expected" ]]; then
    printf 'Cancelled.\n'
    exit 1
  fi
}

dry_run=false
force=false

while [[ $# -gt 0 ]]; do
  case "$1" in
    --dry-run)
      dry_run=true
      shift
      ;;
    -f|--force)
      force=true
      shift
      ;;
    -h|--help)
      usage
      exit 0
      ;;
    -*)
      opt=${1#-}
      shift
      for ((i=0; i<${#opt}; ++i)); do
        char=${opt:i:1}
        case "$char" in
          *)
            error "unknown option: -$char"
            usage >&2
            exit 2
            ;;
        esac
      done
      ;;
    *)
      error "positional arguments are not accepted (zap-all affects the entire repository)"
      usage >&2
      exit 2
      ;;
  esac
done

check_git_repo

run_preview() {
  hug w wipe-all --dry-run
  hug w purge-all --dry-run -u -i
}

if $dry_run; then
  run_preview
  exit 0
fi

if ! $force; then
  printf 'ðŸš¨âš  About to run zap-all with the following effects:\n'
  run_preview
  confirm 'Type "zap-all" to confirm: ' 'zap-all'
fi

hug w wipe-all --force
hug w purge-all --force -u -i

exit 0
