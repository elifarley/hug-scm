#!/usr/bin/env bash
CMD_BASE="$(readlink -f "$0" 2>/dev/null || greadlink -f "$0")" || CMD_BASE="$0"; CMD_BASE="$(dirname "$CMD_BASE")"
for f in hug-common hug-git-kit; do . "$CMD_BASE/../lib/$f"; done
set -euo pipefail  # Exit on error, undefined vars, pipe failures
# Part of the Hug tool suite

show_help() {
    cat << EOF
h undo: Take back commits and unstages their changes: HEAD goes back, their changes are kept unstaged.

USAGE:
    hug h undo [N|COMMIT] [-u, --upstream] [--quiet]

OPTIONS:
    -u, --upstream  Mixed reset to upstream remote tip (discards local-only commits; no fetch)
    --quiet         Suppress output (sets HUG_QUIET=T)

DESCRIPTION:
    Mixed reset to target. With -u, discards local-only commits to sync with remote tip.

EXAMPLES:
    hug h undo -u                # Mixed reset to upstream, keep local changes unstaged
    hug h undo 3                 # Mixed reset last 3 commits
    hug h undo a1b2c3            # Mixed reset after specified commit

SEE ALSO:
    hug h back    Soft reset (keep changes staged)
EOF
}

upstream=false
target_arg=""
while [[ $# -gt 0 ]]; do
  case "$1" in
    '-h'|'--help') show_help; exit 1 ;;
    -u|--upstream) upstream=true; shift ;;
    --quiet) HUG_QUIET=T; shift ;;
    *) target_arg="$1"; shift ;;
  esac
done

if $upstream && [[ -n "$target_arg" ]]; then
  error "Cannot specify both --upstream and a target (N|COMMIT)."
fi

check_git_repo

if $upstream; then
  target=$(handle_upstream_operation "undoing" "y/N" "mixed reset to upstream, keep changes unstaged")
else
  case "${target_arg:-}" in
    '') target='HEAD~1' ;;
    [1-9]|[1-9][0-9]|[1-9][0-9][0-9]) target="HEAD~$target_arg" ;;
    *) target="$target_arg" ;;
  esac
fi

git reset --mixed "$target"
info "Mixed reset to $target complete."
